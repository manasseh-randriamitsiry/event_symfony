security:
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    
    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        
        main:
            lazy: true
            provider: app_user_provider
            json_login:
                check_path: app_login
                username_path: email
                password_path: password
            stateless: false
            jwt: ~

    access_control:
        - { path: ^/api/auth/login, roles: PUBLIC_ACCESS }
        - { path: ^/api/auth/register, roles: PUBLIC_ACCESS }
        - { path: ^/api/auth/forgot-password, roles: PUBLIC_ACCESS }
        - { path: ^/api/auth/verify-reset-code, roles: PUBLIC_ACCESS }
        - { path: ^/api/auth/reset-password, roles: PUBLIC_ACCESS }
        - { path: ^/api/auth/verify-account, roles: PUBLIC_ACCESS }
        - { path: ^/api/auth/logout, roles: PUBLIC_ACCESS }
        - { path: ^/api/events$, methods: [GET], roles: PUBLIC_ACCESS }
        - { path: ^/api/events/\d+$, methods: [GET], roles: PUBLIC_ACCESS }
        - { path: ^/api/events/upcoming, methods: [GET], roles: PUBLIC_ACCESS }
        - { path: ^/api/events/past, methods: [GET], roles: PUBLIC_ACCESS }
        - { path: ^/api/events/search, methods: [GET], roles: PUBLIC_ACCESS }
        - { path: ^/api/events/\d+/statistics, methods: [GET], roles: PUBLIC_ACCESS }
        - { path: ^/api, roles: ROLE_USER }
        - { path: ^/favicon\.ico, roles: PUBLIC_ACCESS }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
